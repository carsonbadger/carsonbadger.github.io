{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Index","props","scrollToTop","bind","Events","scrollEvent","register","console","log","arguments","Promise","resolve","reject","remove","scrollTo","duration","delay","smooth","then","containerId","Jumbotron","Navbar","Nav","className","Link","activeClass","to","spy","Container","Row","id","Col","name","md","lg","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dea853d9.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    // Button,\n    // ButtonToolbar,\n    Navbar,\n    Nav,\n    // NavDropdown,\n    Container,\n    Row,\n    Col,\n    Jumbotron\n} from 'react-bootstrap';\nimport {Link as ScrollLink, Element, Events} from 'react-scroll'\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        Index.scrollToTop = Index.scrollToTop.bind(this);\n    }\n\n    componentDidMount() {\n\n        Events.scrollEvent.register('begin', function () {\n            console.log(\"begin\", arguments);\n        });\n\n        Events.scrollEvent.register('end', function () {\n            console.log(\"end\", arguments);\n        });\n\n    }\n\n    static scrollToTop() {\n        Index.scrollToTop();\n    }\n\n    static scrollTo() {\n        Index.scrollTo('scroll-to-element', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart'\n        })\n    }\n\n    scrollToWithContainer() {\n\n        let goToContainer = new Promise((resolve, reject) => {\n\n            Events.scrollEvent.register('end', () => {\n                resolve();\n                Events.scrollEvent.remove('end');\n            });\n\n            Index.scrollTo('scroll-container', {\n                duration: 800,\n                delay: 0,\n                smooth: 'easeInOutQuart'\n            });\n\n        });\n\n        goToContainer.then(() =>\n            Index.scrollTo('scroll-container-second-element', {\n                duration: 800,\n                delay: 0,\n                smooth: 'easeInOutQuart',\n                containerId: 'scroll-container'\n            }));\n    }\n\n    componentWillUnmount() {\n        Events.scrollEvent.remove('begin');\n        Events.scrollEvent.remove('end');\n    }\n\n    render() {\n        return (\n            <div>\n                <Jumbotron>\n                    <Navbar>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link>\n                                <ScrollLink activeClass=\"active\" className=\"aboutMe\" to=\"aboutMe\" spy={true}\n                                            smooth={true} duration={500}>\n                                    About Me\n                                </ScrollLink>\n                            </Nav.Link>\n\n                            <Nav.Link>\n                                <ScrollLink activeClass=\"active\" className=\"resume\" to=\"resume\" spy={true} smooth={true}\n                                            duration={500}>\n                                    Resume\n                                </ScrollLink>\n                            </Nav.Link>\n\n                            <Nav.Link>\n                                <ScrollLink activeClass=\"active\" className=\"coverLetter\" to=\"coverLetter\" spy={true}\n                                            smooth={true} duration={500}>\n                                    Cover Letter\n                                </ScrollLink>\n                            </Nav.Link>\n\n                            <Nav.Link>\n                                <ScrollLink activeClass=\"active\" className=\"projects\" to=\"projects\" spy={true}\n                                            smooth={true}\n                                            duration={500}>\n                                    Projects\n                                </ScrollLink>\n                            </Nav.Link>\n\n                            <Nav.Link>\n                                <ScrollLink activeClass=\"active\" className=\"contact\" to=\"contact\" spy={true}\n                                            smooth={true} duration={500}>\n                                    Contact Me\n                                </ScrollLink>\n                            </Nav.Link>\n\n                        </Nav>\n                    </Navbar>\n                    <h1>\n                        Carson M. Badger\n                    </h1>\n                </Jumbotron>\n                <Container>\n                    <Row id=\"aboutMe\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"aboutMe\" className=\"element\">\n                                About Me\n                            </Element>\n                            <Col>\n                                Here is a ton of stuff about me\n                            </Col>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"resume\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"resume\" className=\"element\">\n                                Resume\n                            </Element>\n                            <Col>\n                                Here is my super fancy resume\n                            </Col>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"aboutMe\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"coverLetter\" className=\"element\">\n                                Cover Letter\n                            </Element>\n                            <Col>\n                                Here is my super fancy cover letter\n                            </Col>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"projects\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"projects\" className=\"element\">\n                                Projects\n                            </Element>\n                            <Col>\n                                Here are some of my projects I have worked on\n                                <Container id=\"projectArea\">\n                                    <Row className=\"justify-content-md-center\">\n                                        <Col md lg className=\"projectItem\">\n                                            Project 1\n                                        </Col>\n                                        <Col md lg className=\"projectItem\">\n                                            Project 1\n                                        </Col>\n                                        <Col md lg className=\"projectItem\">\n                                            Project 1\n                                        </Col>\n                                        <Col md lg className=\"projectItem\">\n                                            Project 1\n                                        </Col>\n\n                                    </Row>\n                                </Container>\n                            </Col>\n\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"aboutMe\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"contact\" className=\"element\">\n                                Contact Me\n                            </Element>\n                            <Col>\n                                Here is how you can contact me\n                            </Col>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nclass App extends React.Component {\n    render() {\n        return (\n           <Index />\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}