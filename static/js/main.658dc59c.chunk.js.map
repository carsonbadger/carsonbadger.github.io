{"version":3,"sources":["App.js","serviceWorker.js","index.js","Carson_Badger_Resume.pdf","../node_modules/pdfjs-dist/build sync"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","Index","props","scrollToTop","bind","state","pageNumber","renderResume","renderCoverLetter","viewResume","viewCoverLetter","Promise","resolve","reject","Events","scrollEvent","register","remove","scrollTo","duration","delay","smooth","then","containerId","newRender","this","setState","Jumbotron","Navbar","Nav","className","activeClass","to","spy","Container","Row","id","Col","name","ButtonToolbar","Button","href","resume","variant","onClick","file","loading","CardDeck","Card","Header","Body","Text","Link","Footer","ListGroup","Item","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","webpackEmptyContext","req","e","Error","code","keys"],"mappings":"uYAmBAA,QAAMC,oBAAoBC,UAA1B,kDAAiFF,QAAMG,QAAvF,kB,IAEMC,E,YAEF,WAAYC,GAAQ,IAAD,6BACf,4CAAMA,IACND,EAAME,YAAcF,EAAME,YAAYC,KAAlB,gBACpB,EAAKC,MAAQ,CACTC,WAAY,EACZC,aAAc,OACdC,kBAAmB,QAEvB,EAAKC,WAAa,EAAKA,WAAWL,KAAhB,gBAClB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBATR,E,qFAyBK,IAAIO,QAAQ,SAACC,EAASC,GACtCC,SAAOC,YAAYC,SAAS,MAAO,WAC/BJ,IACAE,SAAOC,YAAYE,OAAO,SAE9BhB,EAAMiB,SAAS,mBAAoB,CAC/BC,SAAU,IACVC,MAAO,EACPC,OAAQ,qBAGFC,KAAK,kBACfrB,EAAMiB,SAAS,kCAAmC,CAC9CC,SAAU,IACVC,MAAO,EACPC,OAAQ,iBACRE,YAAa,yB,6CAKrBT,SAAOC,YAAYE,OAAO,SAC1BH,SAAOC,YAAYE,OAAO,S,mCAI1B,IAAIO,EAAY,GAEZA,EAD4B,WAA5BC,KAAKpB,MAAME,aACC,OAEA,SAChBkB,KAAKC,SAAS,SAAArB,GAAK,MAAK,CACpBE,aAAciB,O,wCAKlB,IAAIA,EAAY,GAEZA,EADiC,WAAjCC,KAAKpB,MAAMG,kBACC,OAEA,SAChBiB,KAAKC,SAAS,SAAArB,GAAK,MAAK,CACpBG,kBAAmBgB,O,+BAIjB,IAAD,EACiDC,KAAKpB,MAApDC,EADF,EACEA,WAAYC,EADd,EACcA,aAAcC,EAD5B,EAC4BA,kBAEjC,OACI,6BACI,kBAACmB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAAC,OAAD,CAAYC,YAAY,SAASD,UAAU,mBAAmBE,GAAG,UAAUC,KAAK,EACpEZ,QAAQ,EAAMF,SAAU,KADpC,YAKA,kBAAC,OAAD,CAAYY,YAAY,SAASD,UAAU,kBAAkBE,GAAG,SAASC,KAAK,EAClEZ,QAAQ,EACRF,SAAU,KAFtB,UAMA,kBAAC,OAAD,CAAYY,YAAY,SAASD,UAAU,uBAAuBE,GAAG,cACzDC,KAAK,EACLZ,QAAQ,EAAMF,SAAU,KAFpC,gBAMA,kBAAC,OAAD,CAAYY,YAAY,SAASD,UAAU,oBAAoBE,GAAG,WAAWC,KAAK,EACtEZ,QAAQ,EACRF,SAAU,KAFtB,YAMA,kBAAC,OAAD,CAAYY,YAAY,SAASD,UAAU,mBAAmBE,GAAG,UAAUC,KAAK,EACpEZ,QAAQ,EAAMF,SAAU,KADpC,gBAMR,iDAIJ,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,UAAUN,UAAU,WACxB,kBAACO,EAAA,EAAD,KACI,kBAAC,UAAD,CAASC,KAAK,UAAUR,UAAU,WAAlC,YAGA,kBAACO,EAAA,EAAD,0CAKR,6BACA,kBAACF,EAAA,EAAD,CAAKC,GAAG,SAASN,UAAU,WACvB,kBAACO,EAAA,EAAD,KACI,kBAAC,UAAD,CAASC,KAAK,SAASR,UAAU,WAAjC,UAGA,kBAACO,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAMC,IAAQC,QAAQ,aAC1B,uBAAGb,UAAU,oBADjB,oBAGA,kBAACU,EAAA,EAAD,CAAQI,QAASnB,KAAKhB,WAAYkC,QAAQ,YAAYb,UAAU,WAC5D,uBAAGA,UAAU,6BADjB,iBAIJ,kBAAC,WAAD,CACIe,KAAMH,IACNI,QAAQ,oBACRhB,UAAWvB,GAEX,kBAAC,OAAD,CAAMD,WAAYA,QAKlC,6BACA,kBAAC6B,EAAA,EAAD,CAAKC,GAAG,UAAUN,UAAU,WACxB,kBAACO,EAAA,EAAD,KACI,kBAAC,UAAD,CAASC,KAAK,cAAcR,UAAU,WAAtC,gBAGA,kBAACO,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAMC,IAAQC,QAAQ,aAC1B,uBAAGb,UAAU,oBADjB,0BAGA,kBAACU,EAAA,EAAD,CAAQI,QAASnB,KAAKf,gBAAiBiC,QAAQ,YAAYb,UAAU,WACjE,uBAAGA,UAAU,6BADjB,uBAIJ,kBAAC,WAAD,CACIe,KAAMH,IACNI,QAAQ,oBACRhB,UAAWtB,GAEX,kBAAC,OAAD,CAAMF,WAAYA,QAKlC,6BACA,kBAAC6B,EAAA,EAAD,CAAKC,GAAG,WAAWN,UAAU,WACzB,kBAACO,EAAA,EAAD,KACI,kBAAC,UAAD,CAASC,KAAK,WAAWR,UAAU,WAAnC,YAGA,6BACA,kBAACO,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,CAAWE,GAAG,eACV,kBAACD,EAAA,EAAD,CAAKL,UAAU,6BACX,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,kBACA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKG,KAAN,+EAKJ,kBAACH,EAAA,EAAKI,KAAN,CAAWX,KAAK,IACZ,kBAACO,EAAA,EAAKK,OAAN,wBAIJ,kBAACL,EAAA,EAAKI,KAAN,CAAWX,KAAK,IACZ,kBAACO,EAAA,EAAKK,OAAN,kCAKR,kBAACL,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,iEAEA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKG,KAAN,+EAKJ,kBAACH,EAAA,EAAKI,KAAN,CAAWX,KAAK,IACZ,kBAACO,EAAA,EAAKK,OAAN,wBAIJ,kBAACL,EAAA,EAAKI,KAAN,CAAWX,KAAK,IACZ,kBAACO,EAAA,EAAKK,OAAN,kCAKR,kBAACL,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,kBACA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKG,KAAN,+EAKJ,kBAACH,EAAA,EAAKI,KAAN,CAAWX,KAAK,IACZ,kBAACO,EAAA,EAAKK,OAAN,wBAIJ,kBAACL,EAAA,EAAKI,KAAN,CAAWX,KAAK,IACZ,kBAACO,EAAA,EAAKK,OAAN,wCAYhC,6BACA,kBAAClB,EAAA,EAAD,CAAKC,GAAG,UAAUN,UAAU,WACxB,kBAACO,EAAA,EAAD,KACI,kBAAC,UAAD,CAASC,KAAK,UAAUR,UAAU,WAAlC,cAGA,kBAACO,EAAA,EAAD,KACI,kBAACiB,EAAA,EAAD,CAAWX,QAAQ,SACf,kBAACW,EAAA,EAAUC,KAAX,KACI,uBAAGzB,UAAU,oBADjB,0BAGA,kBAACwB,EAAA,EAAUC,KAAX,KACI,uBAAGzB,UAAU,kBADjB,+BAGA,kBAACwB,EAAA,EAAUC,KAAX,KACI,uBAAGzB,UAAU,iBADjB,mC,qCA3P5B7B,EAAME,gB,iCAINF,EAAMiB,SAAS,oBAAqB,CAChCC,SAAU,IACVC,MAAO,EACPC,OAAQ,uB,GAtBAmC,IAAMC,WAgSXC,E,iLANP,OACI,kBAAC,EAAD,U,GAHMF,IAAMC,WCjSJE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC,gB,mBEnInBC,EAAOC,QAAU,IAA0B,kD,iBCA3C,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoB/D,QAAU+D,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBvC,GAAK,I","file":"static/js/main.658dc59c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Navbar,\n    Nav,\n    Container,\n    Row,\n    Col,\n    Jumbotron,\n    Button,\n    ButtonToolbar,\n    Card,\n    CardDeck,\n    ListGroup\n} from 'react-bootstrap';\nimport {Link as ScrollLink, Element, Events} from 'react-scroll'\nimport {Document, Page, pdfjs} from 'react-pdf';\n\nimport resume from './Carson_Badger_Resume.pdf';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        Index.scrollToTop = Index.scrollToTop.bind(this);\n        this.state = {\n            pageNumber: 1,\n            renderResume: \"hide\",\n            renderCoverLetter: \"hide\"\n        };\n        this.viewResume = this.viewResume.bind(this);\n        this.viewCoverLetter = this.viewCoverLetter.bind(this);\n    }\n\n    static scrollToTop() {\n        Index.scrollToTop();\n    }\n\n    static scrollTo() {\n        Index.scrollTo('scroll-to-element', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart'\n        })\n    }\n\n    scrollToWithContainer() {\n        let goToContainer = new Promise((resolve, reject) => {\n            Events.scrollEvent.register('end', () => {\n                resolve();\n                Events.scrollEvent.remove('end');\n            });\n            Index.scrollTo('scroll-container', {\n                duration: 800,\n                delay: 0,\n                smooth: 'easeInOutQuart'\n            });\n        });\n        goToContainer.then(() =>\n            Index.scrollTo('scroll-container-second-element', {\n                duration: 800,\n                delay: 0,\n                smooth: 'easeInOutQuart',\n                containerId: 'scroll-container'\n            }));\n    }\n\n    componentWillUnmount() {\n        Events.scrollEvent.remove('begin');\n        Events.scrollEvent.remove('end');\n    }\n\n    viewResume() {\n        let newRender = \"\";\n        if (this.state.renderResume === \"render\")\n            newRender = \"hide\";\n        else\n            newRender = \"render\";\n        this.setState(state => ({\n            renderResume: newRender\n        }));\n    }\n\n    viewCoverLetter() {\n        let newRender = \"\";\n        if (this.state.renderCoverLetter === \"render\")\n            newRender = \"hide\";\n        else\n            newRender = \"render\";\n        this.setState(state => ({\n            renderCoverLetter: newRender\n        }));\n    }\n\n    render() {\n        const {pageNumber, renderResume, renderCoverLetter} = this.state;\n\n        return (\n            <div>\n                <Jumbotron>\n                    <Navbar>\n                        <Nav className=\"mr-auto\">\n                            <ScrollLink activeClass=\"active\" className=\"aboutMe nav-link\" to=\"aboutMe\" spy={true}\n                                        smooth={true} duration={500}>\n                                About Me\n                            </ScrollLink>\n\n                            <ScrollLink activeClass=\"active\" className=\"resume nav-link\" to=\"resume\" spy={true}\n                                        smooth={true}\n                                        duration={500}>\n                                Resume\n                            </ScrollLink>\n\n                            <ScrollLink activeClass=\"active\" className=\"coverLetter nav-link\" to=\"coverLetter\"\n                                        spy={true}\n                                        smooth={true} duration={500}>\n                                Cover Letter\n                            </ScrollLink>\n\n                            <ScrollLink activeClass=\"active\" className=\"projects nav-link\" to=\"projects\" spy={true}\n                                        smooth={true}\n                                        duration={500}>\n                                Projects\n                            </ScrollLink>\n\n                            <ScrollLink activeClass=\"active\" className=\"contact nav-link\" to=\"contact\" spy={true}\n                                        smooth={true} duration={500}>\n                                Contact Me\n                            </ScrollLink>\n                        </Nav>\n                    </Navbar>\n                    <h1>\n                        Carson M. Badger\n                    </h1>\n                </Jumbotron>\n                <Container>\n                    <Row id=\"aboutMe\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"aboutMe\" className=\"element\">\n                                About Me\n                            </Element>\n                            <Col>\n                                Here is a ton of stuff about me\n                            </Col>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"resume\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"resume\" className=\"element\">\n                                Resume\n                            </Element>\n                            <Col>\n                                <ButtonToolbar>\n                                    <Button href={resume} variant=\"secondary\">\n                                        <i className=\"fas fa-download\"></i> Download Resume\n                                    </Button>\n                                    <Button onClick={this.viewResume} variant=\"secondary\" className=\"viewPDF\">\n                                        <i className=\"fas fa-expand-arrows-alt\"></i> View Resume\n                                    </Button>\n                                </ButtonToolbar>\n                                <Document\n                                    file={resume}\n                                    loading=\"Loading Resume...\"\n                                    className={renderResume}\n                                >\n                                    <Page pageNumber={pageNumber}/>\n                                </Document>\n                            </Col>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"aboutMe\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"coverLetter\" className=\"element\">\n                                Cover Letter\n                            </Element>\n                            <Col>\n                                <ButtonToolbar>\n                                    <Button href={resume} variant=\"secondary\">\n                                        <i className=\"fas fa-download\"></i> Download Cover Letter\n                                    </Button>\n                                    <Button onClick={this.viewCoverLetter} variant=\"secondary\" className=\"viewPDF\">\n                                        <i className=\"fas fa-expand-arrows-alt\"></i> View Cover Letter\n                                    </Button>\n                                </ButtonToolbar>\n                                <Document\n                                    file={resume}\n                                    loading=\"Loading Resume...\"\n                                    className={renderCoverLetter}\n                                >\n                                    <Page pageNumber={pageNumber}/>\n                                </Document>\n                            </Col>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"projects\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"projects\" className=\"element\">\n                                Projects\n                            </Element>\n                            <br/>\n                            <Col>\n                                <Container id=\"projectArea\">\n                                    <Row className=\"justify-content-md-center\">\n                                        <CardDeck>\n                                            <Card>\n                                                <Card.Header>Project 1</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        Here is a short description of the project. Click below to read\n                                                        more.\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <Card.Link href=\"\">\n                                                    <Card.Footer>\n                                                        Expand Project\n                                                    </Card.Footer>\n                                                </Card.Link>\n                                                <Card.Link href=\"\">\n                                                    <Card.Footer>\n                                                        View Project in New Tab\n                                                    </Card.Footer>\n                                                </Card.Link>\n                                            </Card>\n                                            <Card>\n                                                <Card.Header>Really Super Duper Long Project Name for Testing\n                                                    Reasons</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        Here is a short description of the project. Click below to read\n                                                        more.\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <Card.Link href=\"\">\n                                                    <Card.Footer>\n                                                        Expand Project\n                                                    </Card.Footer>\n                                                </Card.Link>\n                                                <Card.Link href=\"\">\n                                                    <Card.Footer>\n                                                        View Project in New Tab\n                                                    </Card.Footer>\n                                                </Card.Link>\n                                            </Card>\n                                            <Card>\n                                                <Card.Header>Project 3</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        Here is a short description of the project. Click below to read\n                                                        more.\n                                                    </Card.Text>\n                                                </Card.Body>\n                                                <Card.Link href=\"\">\n                                                    <Card.Footer>\n                                                        Expand Project\n                                                    </Card.Footer>\n                                                </Card.Link>\n                                                <Card.Link href=\"\">\n                                                    <Card.Footer>\n                                                        View Project in New Tab\n                                                    </Card.Footer>\n                                                </Card.Link>\n                                            </Card>\n                                        </CardDeck>\n                                    </Row>\n                                </Container>\n                            </Col>\n\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row id=\"aboutMe\" className=\"rowArea\">\n                        <Col>\n                            <Element name=\"contact\" className=\"element\">\n                                Contact Me\n                            </Element>\n                            <Col>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <i className=\"far fa-envelope\"></i> Email: test@gmail.com\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <i className=\"fab fa-github\"></i> Github: https://github.com\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <i className=\"fas fa-phone\"></i> Phone: (999) 999-9999\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Index/>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Carson_Badger_Resume.31417f72.pdf\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 37;"],"sourceRoot":""}